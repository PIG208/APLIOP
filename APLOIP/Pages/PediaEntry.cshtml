@page "/Pedia/{title}"
@model APLOIP.Pages.PediaEntryModel
@{
    ViewData["Title"] = "PEDIA";
}

<style>
    h2 {
        font-size: 1.5rem;
        color: grey;
    }

    #toolbar {
        user-select: none;
        /*display:inline-block;*/
        display: none;
        border-radius: 0.5em;
        padding: 0.1rem 0.1rem 0.1rem 0.1rem;
        background-color: transparent;
    }

        #toolbar > button {
            display: inline-block;
            position: relative;
            height: 2.3rem;
            margin: 0.05rem 0.05rem 0.05rem 0.05rem;
        }

            #toolbar > button > .fa {
                font-size: 1.2rem;
            }

    .editToolbar {
        display: none;
        float: right;
        margin-right: 0.5rem;
        margin-left: 0.5rem;
    }

    .paragraph {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
    }

    #trashpara {
        display: none;
    }
</style>

@Html.AntiForgeryToken()
<button type="button" id="btn-edit" class="btn btn-light float-right">Edit</button>
<button type="button" class="btn btn-light editToolbar" data-toggle="modal" data-target="#modal-exit">Exit</button>
<button type="button" class="btn btn-light editToolbar" data-toggle="modal" data-target="#modal-settings">Settings</button>
<button type="button" class="btn btn-info editToolbar" data-toggle="modal" data-target="#modal-save">Save</button>

<h1 id="page-title">@Html.DisplayFor(model => model.PageEntry.DisplayTitle)</h1>
<hr />
@if (!Model.IsBasicEntry(Model.PageEntry))
{
<h2 id="page-basic-class-title">
    @PediaEntryModel.BasicClasses.Find(basicClassObj => basicClassObj.ID == Model.PageEntry.BasicClassID)?.DisplayTitle
</h2>
}
<div id="view">
    @Html.Raw(Model.PageEntry.PageContent)
</div>

<div id="popper"></div>
<div id="trashpara"></div>
<span id="toolbar">
    <button type="button" id="insertline" data-container="body" data-toggle="popover" data-placement="bottom" data-content="Insert a paragraph" class="btn btn-light"><span class="fa fa-plus"></span></button>
    <button type="button" id="removeline" data-container="body" data-toggle="popover" data-placement="bottom" data-content="Remove the current paragraph" class="btn btn-light"><span class="fa fa-minus"></span></button>
</span>
<div id="modal-save" class="modal fade" role="dialog" aria-labelledby="Save the changes" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <h5>Save</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <p>Are you sure to save all changes you have made to this entry?</p>
            </div>
            <div class="modal-footer">
                <button id="btn-save" type="button" class="btn btn-info">Save</button>
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-settings" class="modal fade" role="dialog" aria-labelledby="Settings" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <h5>Settings</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="settings">
                    <div class="form-group">
                        <label for="DisplayTitle">DisplayTitle</label>
                        <input id="DisplayTitle" name="DisplayTitle" type="text" class="form-control" placeholder="@Model.PageEntry.DisplayTitle" value="@Model.PageEntry.DisplayTitle" />
                    </div>
                    <div class="form-group">
                        <label for="BasicClass">BasicClass</label>
                        <select id="BasicClass" class="form-control" value="@Model.PageEntry.BasicClassID"
                                @if (Model.IsBasicEntry(Model.PageEntry)) { @Html.Raw("disabled") }>
                            <option value="0">None</option>
                            @if (PediaEntryModel.BasicClasses.Count > 0)
                            {
                                @foreach (BasicClass basicClass in PediaEntryModel.BasicClasses)
                                {
                                    @Html.Raw("<option value=" + basicClass.ID + ((Model.PageEntry.BasicClassID == basicClass.ID) ? " selected" : "") + ">" + @basicClass.DisplayTitle + "</option>")
                                }
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn-settings" type="button" class="btn btn-info">Apply</button>
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-exit" class="modal fade" role="dialog" aria-labelledby="Discard the changes and exit" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <h5>Exit</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <p>Are you sure to discard all the unsaved changes and exit? </p>
            </div>
            <div class="modal-footer">
                <button id="btn-exit" type="button" class="btn btn-danger" data-dismiss="modal">Exit</button>
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
    @section Scripts
{
<script>
    var edit = false;
    var $focus;
    var history = [$focus];
    $('[data-toggle="popover"]').popover();
    $('[data-toggle="popover"]').hover(function () {
        $(this).popover('show');
    });
    $('[data-toggle="popover"]').mouseleave(function () {
        $(this).popover('hide');
    });

    function paraInit($obj) {
        $obj.focusin(function () {
            $focus = $(this);
            $("#toolbar").insertAfter($(this));
            $("#toolbar").finish().fadeIn(200);
        });
        $obj.focusout(function () {
            //$focus = undefined;
            $("#toolbar").finish().fadeOut(200);
        });
        $obj.change(function () {
            if (!$obj.text()) {
            }
        });
    }

    function paraInsert($target) {
        var $newPara = $('<div class="paragraph"></div>');
        console.log($newPara);
        $newPara.insertBefore($target);
        BalloonEditor.
            create($newPara.get(0), {
                placeholder: "Click to edit the paragraph"
            });
        paraInit($newPara);
        $newPara.slideDown(50);
    }

    $("#btn-edit").mousedown(function () {
        if (edit)
            return;
        $(this).fadeOut(250, () => $(".editToolbar").fadeIn(250));
        if ($("#view > .tempintro").length == 1) {
            paraInsert($(".tempintro"));
            $(".tempintro").remove();
        }
        else {
            $(".paragraph").each(function () {
            BalloonEditor.
                create(this, {
                placeholder: "Click to edit the paragraph"
                });
            });
            paraInit($(".paragraph"));
        }
    });
    //用户点击保存按钮事件
    $("#btn-save").mousedown(function () {
        //判断上一个保存请求是否完成
        if (!$(this).data("isCompleted") && $(this).data("isCompleted") != undefined)
            return;
        //将编辑器元素从
        var $content = $("#view").clone();
        $content.hide();
        $content.find("#toolbar").remove();
        $content.find(".ck-placeholder").remove();
        $content.children().each((index, element) => {
            while (element.attributes.length > 0)
            {
                element.removeAttribute(element.attributes[0].name);
            }
            $(element).attr("class", "paragraph");
        });
        $content.find("*[data-placeholder]").removeAttr("data-placeholder");
        var postData = {
            "UniqueTitle":"@Model.PageEntry.UniqueTitle",
            "BasicClassID":$('#BasicClass').val(),
            "DisplayTitle":($("#DisplayTitle").val().trim()!="")?$("#DisplayTitle").val().trim():"@Model.PageEntry.DisplayTitle",
            "PageContent": $content.html()
        };

        $.ajax({
            url: '/Pedia/@Model.PageEntry.UniqueTitle?handler=Save',
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(postData),
            beforeSend: (xhr) => {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $("input:hidden[name=__RequestVerificationToken]").val());
            },
            error: function () {
                console.log("error");
            },
            success: function (data) {
                console.log(data);
                if (data[0] == 1) {
                    console.log(data[0]);
                }
            },
            complete: () => {
                $("#modal-save").modal("hide");
                $(this).data("isCompleted", true);
            }
        })
    });
    //用户点击退出事件
    $("#btn-exit").mousedown(function () {
            location.reload();
    });
    function saveSettings() {
        $("#page-title").text(($("#DisplayTitle").val().trim() != "")?$("#DisplayTitle").val().trim():"@Model.PageEntry.DisplayTitle");
        var text = $("#BasicClass > option").eq($('#BasicClass').val()).text();
        if (text != "None") {
            $("#page-basic-class-title").text(text);
        }
        else {
            $("#page-basic-class-title").text("");
        }
        $("#modal-settings").modal("hide");
    }
    $("#settings").submit(function (e) {
        e.preventDefault();
        saveSettings();
    });
    $("#btn-settings").mousedown(function () {
        saveSettings();
    });
    //用户点击保存设置事件
    $("#insertline").mousedown(function () {
        paraInsert($("#toolbar"));
    });
    $("#removeline").mousedown(function () {
        if ($("#view > .paragraph").length == 1)
            paraInsert($("#toolbar"));
        if ($focus != undefined && $focus != null) {

        }
        $focus.fadeOut(200, function () {
            $(this).appendTo($("#trashpara"));
        });
    });
    </script>
}